sudo apt-get update -y
sudo apt-get upgrade -y

sudo apt install nano
sudo apt install cron

sudo adduser frappe //[frappe-user]
usermod -aG sudo frappe //[frappe-user]
su frappe //[frappe-user] 
cd /home/frappe //[frappe-user]

sudo apt-get install git -y

sudo apt-get install python3-dev -y

sudo apt-get install python3-setuptools python3-pip -y

sudo apt-get install software-properties-common -y
sudo apt install mariadb-server -y
sudo mysql_secure_installation

sudo nano /etc/mysql/my.cnf
[mysqld]
character-set-client-handshake = FALSE
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci

[mysql]
default-character-set = utf8mb4

sudo service mysql restart
sudo apt-get install redis-server -y
sudo apt install curl

curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
source ~/.profile
nvm install 18

sudo apt-get install npm -y

sudo npm install -g yarn -y

sudo apt-get install xvfb libfontconfig wkhtmltopdf -y

sudo -H pip3 install frappe-bench --break-system-packages

sudo -H pip3 install ansible --break-system-packages

bench init frappe-bench --frappe-branch version-15

cd frappe-bench

chmod -R o+rx /home/ frappe //[frappe-user]

bench new-site vnc //[site-name]

bench get-app payments

bench get-app --branch version-15 erpnext

bench get-app hrms

bench --site vnc install-app erpnext

bench --site vnc install-app hrms // xảy ra lỗi jj đó có thể bỏ qua.

//setup môi trường xản suất
bench --site vnc enable-scheduler

bench --site vnc set-maintenance-mode off

sudo bench setup production frappe // xảy ra lỗi. tìm và copy đường dẫn
=> sudo nano "đường dẫn file lỗi";
=> ctrl + k xóa hết.
=> PAST
---
- include_tasks: centos.yml
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version|int >= 6

- include_tasks: ubuntu-trusty.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'

- include_tasks: ubuntu-xenial_bionic.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 16

- name: Add configuration
  template:
    src: '{{ mysql_conf_tpl }}'
    dest: '{{ mysql_conf_dir[ansible_distribution] }}/{{ mysql_conf_file }}'
    owner: root
    group: root
    mode: 0644
  when: mysql_conf_tpl != 'change_me' and ansible_distribution != 'Debian'
  notify: restart mariadb

- include_tasks: debian.yml
  when: ansible_distribution == 'Debian'

- name: Add configuration
  template:
    src: '{{ mysql_conf_tpl }}'
    dest: '{{ mysql_conf_dir[ansible_distribution] }}/{{ mysql_conf_file }}'
    owner: root
    group: root
    mode: 0644
  when: mysql_conf_tpl != 'change_me' and ansible_distribution == 'Debian'
  notify: restart mariadb

- name: Add additional conf for MariaDB 10.2 in mariadb.conf.d
  blockinfile:
    path: /etc/mysql/conf.d/settings.cnf
    block: |
      # Import all .cnf files from configuration directory
      !includedir /etc/mysql/mariadb.conf.d/
  become: yes
  become_user: root
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Add additional conf for MariaDB 10.2 in mariadb.conf.d
  blockinfile:
    path: /etc/mysql/mariadb.conf.d/erpnext.cnf
    block: |
      [mysqld]
      pid-file        = /var/run/mysqld/mysqld.pid
      socket          = /var/run/mysqld/mysqld.sock

      # setting appeared inside mysql but overwritten by mariadb inside mariadb.conf.d/xx-server.cnf valued as utf8mb4_general_ci

      collation-server = utf8mb4_unicode_ci
    create: yes
  become: yes
  become_user: root
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Start and enable service
  service:
    name: mariadb
    state: started
    enabled: yes

- debug:
    msg: "{{ mysql_root_password }}"

- include_tasks: mysql_secure_installation.yml
  when: mysql_root_password is defined

- debug:
    var: mysql_secure_installation
  when: mysql_secure_installation and mysql_root_password is defined

...

bench setup nginx

sudo supervisorctl restart all
sudo bench setup production frappe
